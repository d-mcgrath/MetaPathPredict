ls
map
purrr::map
purrr::as_mapper
lapply(c('magrittr', 'tidyverse'), library, character.only = T)
map(.x = )
map(.x = 'b', .f = print)
devtools::document()
1e-3
devtools::document()
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v3.RData')
install.packages('usethis')
install.packages('usethis')
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v3.RData')
usethis::use_data(bacteria.rxn.matrix, imgm.archaea.rxn.matrix, ko_term.tibble, pathways.tibble)
usethis::use_data(bacteria.rxn.matrix, imgm.archaea.rxn.matrix, ko_term.tibble, pathways.tibble, internal = T)
devtools::document()
devtools::document()
MetaPredict()
devtools::document()
library('tidyveres')
library('tidyverse')
library('magrittr')
library('tidyverse')
devtools::document()
install.packages('dplyr')
install.packages("dplyr")
devtools::document()
install.packages('tidyverse')
x == TRUE
x = TRUE
if (x == TRUE) {print('correct')}
rm(x)
devtools::document()
library('MetaPredict')
library('devtools')
devtools::document()
test = read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
test = read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
View(test)
test = MetaPredict(test)
test = MetaPredict(test, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
3 * 10^2
3 * 10^24
library('furrr')
availableCores()
document()
devtools::document()
rm(test)
devtools::document()
devtools::document()
getwd()
setwd('~/MetaPredict/')
devtools::document()
devtools::document()
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
readr::read_delim('~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
readr::read_delim('~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv', delim = '\t')
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
read_data
devtools::document()
read_data
test <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
res = MetaPredict(test)
res = MetaPredict(test, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(res)
View(res[[1]])
View(res[[1]])
devtools::document()
test2 <- read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output')
res2 <- MetaPredict(test, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(test2)
all(res == res2)
all(res[[1]] == res2[[1]])
res[[1]]
res[[1]][[1]]
identical(res, res2)
#started at 1:41pm
#ended at 1:47pm
#significant speed-up!!!! ~6 minutes processing time on one core.
#previous test took 30+ minutes to complete
identical(res, res2)
View(res2)
View(res2[[1]])
View(res)
View(res[[1]])
document()
getwd()
document()
View(test)
iris
iris %>% group_by(Species) %>% summarize(y_j = sum(.data[['Petal.Length']]))
iris %>% group_by(Species) %>% summarize(y_j = sum(.data[['Petal.Length']], n_j = sum(.data[['Petal.Width']])))
iris %>% group_by(Species) %>% summarize(y_j = sum(.data[['Petal.Length']], n_j = sum(.data[['Petal.Width']])))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], n_j = sum(.data[['Petal.Width']])))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], n_j = sum(.data[['Petal.Width']])))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], n_j = length(.data[['Petal.Width']])))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], n_j = length(.data[['Petal.Width']])))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], pi = length(.data[['Petal.Width']])))
View(iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], pi = length(.data[['Petal.Width']])))
)
View(iris %>%
group_by(Species) %>%
summarize(n_j = length(.data[['Petal.Width']])))
x <- iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']], n_j = length(.data[['Petal.Width']])))
x
View(x)
names(iris)
x <- iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]))  %>%
summarize(n_j = length(.data[['Petal.Width']]))
x <- iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']]))
x
rm(x)
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']]))
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']]))
(iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']]))
)$n_j
iris %>%
group_by(Species) %>%
summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']]))$n_j
(iris %>% group_by(Species) %>% summarize(y_j = sum(.data[['Petal.Length']]), n_j = length(.data[['Petal.Width']])))$y_j
document()
document()
test3 = read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output/')
res3 = MetaPredict(test3, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
identical(res3,res)
identical(res,res2)
identical(res2,res3)
View(res3[[1]])
identical(res3[[1]]$probability, res2[[1]]$probability)
ident(res, res3)
ident(res,res3)
identical(res,res3)
identical(res3[[1]]$organism, res2[[1]]$organism)
res.test = res
res.test = res.test %>% select(-organism)
res.test[[1]] = res.test[[1]] %>% select(-organism)
res.test3 = res3
res.test3[[1]] = res.test3[[1]] %>% select(-organism)
identical(res.test, res.test3)
rm(res.test, res.test3)
1/
2
x = c(1,2,3,4,5)
x
y <- vector(mode = "list", length = length(x))
y
document()
rm(x,y)
test4 = read_data('~/Documents/metapredict_project/test-metapred-ko-tsv-output/')
res4 = MetaPredict(test4, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
document()
x = tibble()
x = dplyr::tibble()
x
is.data.frame(x)
class(x)
x = list(1 = c(2,3), 2 = 4)
x = list(at = 'hi', by = 'lo')
x
names(x)
rm(x)
devtools::document()
c(3,4) %in% c(3,4,5,6,7,8,0)
devtools::document()
devtools::document()
