tt %>% group_by(pathway, reaction) %>% filter(reaction != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(probability != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(any(probability != 'Present'))
tt %>% group_by(pathway, reaction) %>% filter(reaction != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(any(probability != 'Present'))
tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present'))
tt %>% group_by(pathway, reaction)
View(tt)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)))
tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present'))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = na.omit(as.numeric(probability))))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% ungroup() %>% mutate(probability = na.omit(as.numeric(probability))))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(na.omit(probability)))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)))
tt %>% group_by(pathway, reaction)
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
tally(probability)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)) %>% ungroup() %>% group_by(pathway))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)) %>% ungroup() %>% group_by(pathway) %>% dplyr::filter(!(duplicated(reaction))))
x = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction)))
x %>% tally(probability)
x
x %>% length(pathway)
x %>% tally(length(pathway))
length(x$pathway) == length(x$probability)
rm(x)
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway))
summary_information <- tibble(pathway_steps_present = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = t %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = t %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
#filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
warnings()
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
View(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway'))
pathway_steps_present <- class(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway'))
pathway_steps_present
rm(pathway_steps_present)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join('test' = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
warnings()
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0L,
TRUE ~ pathway_steps_predicted))
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt[[1]])
View(tt[[2]])
tt[[1]] %>% left_join(select(tt[[2]], pathway, pathway_name), by = 'pathway')
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt[[1]])
devtools::document()
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
devtools::document()
devtools::document()
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
tt = MetaPredict(yy)
devtools::document()
tt = MetaPredict(yy)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(t %>%
group_by(pathway, reaction) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway), by = 'pathway')) %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0L,
TRUE ~ pathway_steps_predicted)) %>%
inner_join(select(tt, pathway, pathway_name), by = 'pathway') %>%
select(pathway, pathway_name, pathway_steps_present,
pathway_steps_predicted, total_pathways_steps)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway), by = 'pathway')) %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0L,
TRUE ~ pathway_steps_predicted)) %>%
inner_join(select(tt, pathway, pathway_name), by = 'pathway') %>%
select(pathway, pathway_name, pathway_steps_present,
pathway_steps_predicted, total_pathways_steps)
tt %>%
group_by(pathway, reaction) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway), by = 'pathway')
tt %>%
tt %>%
tt %>%
group_by(pathway, reaction) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)
tt %>%
group_by(pathway, reaction) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway))
devtools::document()
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
devtools::document()
tt = MetaPredict(yy)
devtools::document()
rm(tt)
tt = MetaPredict(yy)
devtools::document()
rm(tt)
tt = MetaPredict(yy)
install.packages('roptim')
library('roptim')
test = tibble('species' = c(1,2,3),
'Genus' = c(3,4,5)
'family_wrong' = c(4,5,5))
test = tibble('species' = c(1,2,3),
'Genus' = c(3,4,5),
'family_wrong' = c(4,5,5))
NA_real_
NA
NA_real_ == NA
devtools::document()
grepRaw
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v5.RData')
usethis::use_data(bacteria.rxn.matrix, imgm.archaea.rxn.matrix, ko_term.tibble, pathways.tibble, internal = TRUE)
View(bacteria.rxn.matrix)
devtools::document()
devtools::document()
devtools::uninstall('MetaPredict')
devtools::uninstall('MetaPredict', lib = withr::with_libpaths())
withr::with_libpaths()
devtools::document()
purrr::transpose(list(res = list(a=1,b=2,c=2), summary = list(x=1,z=2,y=3)))
devtools::document()
x = read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(x, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
tt
View(x)
View(tt)
View(tt[[1]][[2]])
View(tt)
View(tt[[1]][[1]])
devtools::document()
devtools::document()
View(x)
zz = MetaPredict(x, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
devtools::document()
zz = MetaPredict(x, '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
zz
tm(tt,x,zz)
rm(tt,x,zz)
devtools::document()
singlegenome = readr::read_tsv('~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
singlegenome
x = read_genome_data(singlegenome)
x
singlegenome
results = MetaPredict(x, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(x)
results
View(x[[1]][[2]])
View(results[[1]][[2]])
View(results[[1]][[1]])
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v5.RData')
class(bacteria.rxn.matrix$R00009)
as.integer(bacteria.rxn.matrix$R00009)
class(bacteria.rxn.matrix$R00009[1])
class(as.integer(bacteria.rxn.matrix$R00009[1]))
object.size(as.integer(bacteria.rxn.matrix$R00009[1]))
object.size((bacteria.rxn.matrix$R00009[1]))
object.size(bacteria.rxn.matrix$R00009[1])
object.size(1)
object.size(1L)
object.size(0)
object.size(0L)
object.size(TRUE)
object.size(FALSE)
object.size('a')
object.size(integer(1))
object.size(1)
1
object.size(rep(1, 20000), rep(0, 20000))
object.size(c(rep(1, 20000), rep(0, 20000)))
object.size(c(rep(1L, 20000), rep(0L, 20000)))
