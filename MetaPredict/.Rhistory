dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
total_module_steps = 4) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, total_module_steps) %>%
mutate(module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps),
percent_present = module_steps_present/total_module_steps)
return(results)
}
View(summarize_output(results = results[[1]]))
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
total_module_steps = 4) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, total_module_steps) %>%
mutate(percent_present = module_steps_present/total_module_steps,
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps))
return(results)
}
View(summarize_output(results = results[[1]]))
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
total_module_steps = 4) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, total_module_steps) %>%
mutate(percent_present =
paste0(signif(module_steps_present/total_module_steps, digits = 3), '%'),
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps))
return(results)
}
View(summarize_output(results = results[[1]]))
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
total_module_steps = 4) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, total_module_steps) %>%
mutate(percent_present =
paste0(signif(module_steps_present/total_module_steps, digits = 3) * 100, '%'),
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps))
return(results)
}
View(summarize_output(results = results[[1]]))
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v7-integer-modules')
usethis::use_data(bacteria.rxn.matrix, concat.kegg_modules, internal = TRUE)
devtools::document()
devtools::document()
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(results)
View(results[[1]][[1]])
View(results[[1]][[2]])
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75), by = 'module')
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75)
results[[2]] %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75)
View(results)
View(results[[1]][[2]])
results[[1]][[2]] %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75)
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
total_module_steps = 4) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, total_module_steps) %>%
mutate(percent_present =
paste0(signif(module_steps_present/total_module_steps, digits = 3) * 100, '%'),
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps))
return(results)
}
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
`probability > 75%` = 4, total_module_steps = 5) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, `probability > 75%`, total_module_steps) %>%
mutate(percent_present =
paste0(signif(module_steps_present/total_module_steps, digits = 3) * 100, '%'),
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps),
`probability > 75%` =
paste0(`probability > 75%`, '/', total_module_steps))
return(results)
}
tt = summarize_output(results[[1]][[2]])
View(tt)
summarize_output <- function(results) {
results <- results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability == 'Present') %>%
full_join(suppressWarnings(
results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module))), by = 'module') %>%
full_join(results %>%
group_by(module, step) %>%
dplyr::filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(!is.na(probability)) %>%
ungroup() %>%
group_by(module) %>%
dplyr::filter(!(duplicated(step))) %>%
tally(probability >= 0.75), by = 'module') %>%
full_join(results %>%
dplyr::filter(!(duplicated(step))) %>%
tally(length(module)), by = 'module') %>%
rename(module_steps_present = 2, module_steps_predicted = 3,
`probability > 75%` = 4, total_module_steps = 5) %>%
mutate(module_steps_predicted = case_when(
is.na(module_steps_predicted) ~ 0L,
TRUE ~ module_steps_predicted),
`probability > 75%` = case_when(
is.na(`probability > 75%`) ~ 0L,
TRUE ~ `probability > 75%`)) %>%
inner_join(distinct(select(results, module, name)), by = 'module') %>%
select(module, name, module_steps_present,
module_steps_predicted, `probability > 75%`, total_module_steps) %>%
mutate(percent_present =
paste0(signif(module_steps_present/total_module_steps, digits = 3) * 100, '%'),
module_steps_present =
paste0(module_steps_present, '/', total_module_steps),
module_steps_predicted =
paste0(module_steps_predicted, '/', total_module_steps),
`probability > 75%` =
paste0(`probability > 75%`, '/', total_module_steps))
return(results)
}
tt = summarize_output(results[[1]][[2]])
View(tt)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(results)
View(results[[1]][[1]])
results[[1]][[1]]
results[[1]][[1]]$percent_present
table(results[[1]][[1]]$percent_present == results[[1]][[1]]$`predicted_completeness (probability>75%)`)
View(results[[1]][[2]])
View(results)
test = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
View(test)
View(test[["gene_table"]])
View(test[["present_na"]])
test[['gene_table']]
View(test[["present_na"]])
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
View(test)
View(test)
View(test[["gene_table"]])
View(test[["present_na"]])
devtools::document()
devtools::document()
devtools::document()
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
warnings()
1 != 0
1 != 0 & 1 == 1
View(test)
test$organism[65]
test$organism[64] != 'unidentified taxonomy'
temp <- test %>%
dplyr::group_split() %>%
purrr::map2_lgl(1:length(concat.kegg_modules$full), function(org, module) {
unlist(stringr::str_split(concat.kegg_modules$full[module], ';')) %>%
strsplit('/" /"') %>%
purrr::map(strsplit, ' ') %>%
purrr::flatten() %>%
purrr::map(~ {all(stringr::str_detect(string = org$ko_term, pattern = .x))}) %>%
purrr::some(isTRUE)
})
warnings()
temp
test
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
test
class(test)
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt',
'~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
View(test)
test %>% group_keys()
temp <- test %>%
dplyr::group_split() %>%
purrr::map2_lgl(1:length(concat.kegg_modules$full), function(org, module) {
unlist(stringr::str_split(concat.kegg_modules$full[module], ';')) %>%
strsplit('/" /"') %>%
purrr::map(strsplit, ' ') %>%
purrr::flatten() %>%
purrr::map(~ {all(stringr::str_detect(string = org$ko_term, pattern = .x))}) %>%
purrr::some(isTRUE)
})
temp <- test %>%
dplyr::group_split() %>%
purrr::map_lgl(1:length(concat.kegg_modules$full), function(org, module) {
unlist(stringr::str_split(concat.kegg_modules$full[module], ';')) %>%
strsplit('/" /"') %>%
purrr::map(strsplit, ' ') %>%
purrr::flatten() %>%
purrr::map(~ {all(stringr::str_detect(string = org$ko_term, pattern = .x))}) %>%
purrr::some(isTRUE)
})
temp <- test %>%
dplyr::group_split() %>%
purrr::map(function(org) {
purrr::map_lgl(1:length(concat.kegg_modules$full), function(module) {
unlist(stringr::str_split(concat.kegg_modules$full[module], ';')) %>%
strsplit('/" /"') %>%
purrr::map(strsplit, ' ') %>%
purrr::flatten() %>%
purrr::map(~ {all(stringr::str_detect(string = org$ko_term, pattern = .x))}) %>%
purrr::some(isTRUE)
})
})
View(temp)
temp[[68]]
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v7-integer-modules')
%>%
concat.kegg_modules %>% unlist(stringr::str_split(';'))
concat.kegg_modules %>% unlist(stringr::str_split(full, ';'))
concat.kegg_modules %>% unlist(stringr::str_split(concat.kegg_modules$full, ';'))
head(concat.kegg_modules %>% unlist(stringr::str_split(concat.kegg_modules$full, ';')), 10)
View(concat.kegg_modules)
head(concat.kegg_modules$full %>% unlist(stringr::str_split(concat.kegg_modules, ';')), 10)
length(concat.kegg_modules$full %>% unlist(stringr::str_split(concat.kegg_modules, ';'))
length(concat.kegg_modules$full %>% unlist(stringr::str_split(concat.kegg_modules, ';')))
View(concat.kegg_modules$full %>% unlist(stringr::str_split(concat.kegg_modules, ';')))
save(test, concat.kegg_modules, file = '~/Documents/metapredict_project/concat-test.RData')
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v8-integer-modules')
usethis::use_data(bacteria.rxn.matrix, concat.kegg_modules, patt.kegg_modules, internal = TRUE)
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
devtools::document()
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
devtools::document()
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
devtools::document()
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v8-integer-modules')
View(bacteria.rxn.matrix)
devtools::document()
devtools::document()
test = new_read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test)
warnings()
View(results)
View(results[[2]])
View(results[[1]])
View(results[[1]])
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(results)
View(results[[1]][[1]])
View(results)
View(results[[1]][[2]])
save(test, results, file = '~/Documents/metapredict_project/sample-metapred-output-objects.RData')
rm(results,test)
764/10
77 * 1:10
create_heatmaps_from <- function(results) {
heatmap_matrices <- results %>%
mutate(probability = case_when(probability == 'Present' ~ '1',
TRUE ~ probability),
step = paste0(seq_along(module)),
module_length = length(module)) %>%
arrange(module_length) %>%
select(-c(full, module_length))
splits <- determine_splits_for(heatmap_matrices)
heatmap_matrices <- heatmap_matrices %>%
ungroup() %>%
mutate(split = map(1:length(splits), ~ case_when(module %in% splits[[.x]] ~ .x)) %>%
as_vector() %>%
na.omit()) %>%
group_by(split) %>%
group_split() %>%
purrr::map(~ {
.x <- .x %>%
ungroup() %>%
select(name, step, probability) %>%
pivot_wider(id_cols = step, names_from = name, values_from = probability,
values_fn = toString) %>%
select(-step) %>%
mutate(across(everything(), as.numeric)) %>%
as.matrix() %>%
t()
})
heatmap_list <- purrr::map(heatmap_matrices, ~ {
pheatmap::pheatmap(.x, cluster_rows = FALSE, cluster_cols = FALSE, show_rownames = TRUE)
})
return(heatmap_list)
}
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
devtools::document()
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
devtools::document()
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
View(results)
print(results[[1]][[10]])
print(results[[1]][[9]])
print(results[[1]][[3]][[9]])
devtools::document()
devtools::document()
devtools::document()
test = new_read_genome_data(File = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
results = new_MetaPredict(test, taxonList = '~/Documents/metapredict_project/test-metapred-ko-tsv-output/taxon.csv')
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
