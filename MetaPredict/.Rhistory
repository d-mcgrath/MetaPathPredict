mutate(organism = 'unidentified taxonomy', probability = 'Present')
View(na_add)
temp <- yy[[1]] %>%
inner_join(ko_term.tibble, by = 'ko_term') %>%
dplyr::filter(!(duplicated(reaction))) #at this point we have ko_term, reaction, and reaction_description columns
res <- temp %>%
group_split() %>%
purrr::map(full_join, pathways.tibble, temp, by = c('reaction', 'reaction_description')) %>%
purrr::map(arrange, pathway) %>%
purrr::map(group_by, pathway) %>%
purrr::map(dplyr::filter, !(all(is.na(organism))), !(is.na(pathway))) %>%
purrr::keep(~ !all(is.na(.x$reaction))) #filters out empty lists
scan_missing <- res %>%
purrr::map(ungroup) %>%
purrr::map(dplyr::filter, is.na(ko_term), reaction %in% colnames(bacteria.rxn.matrix)) %>% #bacteria/archaea matrices have the same column names
purrr::map(select, -ko_term)
scan_missing[[1]]
kk = scan_missing[[1]]
kk <- kk %>%
mutate(probability = 'taxonomy not found; no calculation done')
View(kk)
res_list = res[[1]]
res_list <- res_list %>%
full_join(kk, by = c('ko_description', 'reaction', 'reaction_description',
'pathway', 'pathway_name',
'pathway_class', 'organism')) %>%
mutate(probability = as.character(probability), probability = case_when(
!(is.na(ko_term)) & is.na(probability) ~ 'Present',
TRUE ~ probability), organism = case_when(
is.na(organism) ~ unique(na.omit(organism)),
TRUE ~ organism)) %>%
select(organism, pathway, pathway_step, reaction, ko_term, probability,
pathway_name, reaction_description, ko_description, pathway_class)
View(res_list)
res_list %>%
full_join(kk, by = c('ko_description', 'reaction', 'reaction_description',
'pathway', 'pathway_name',
'pathway_class', 'organism'))
res_list %>%
full_join(kk, by = c('ko_description', 'reaction', 'reaction_description',
'pathway', 'pathway_name',
'pathway_class', 'organism', 'pathway_step'))
res_list %>%
full_join(kk, by = c('ko_description', 'reaction', 'reaction_description',
'pathway', 'pathway_name',
'pathway_class', 'organism', 'pathway_step')) %>%
mutate(probability = as.character(probability), probability = case_when(
!(is.na(ko_term)) & is.na(probability) ~ 'Present',
TRUE ~ probability), organism = case_when(
is.na(organism) ~ unique(na.omit(organism)),
TRUE ~ organism)) %>%
select(organism, pathway, pathway_step, reaction, ko_term, probability,
pathway_name, reaction_description, ko_description, pathway_class)
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(yy)
View(tt)
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt)
View(tt %>% select(Gene, organism, ko_term, probability, pathway, reaction))
View(yy)
View(yy[["gene_table"]])
View(yy[["present_na"]])
na_add <- yy[[2]] %>%
inner_join(ko_term.tibble, by = 'ko_term') %>%
dplyr::filter(!(duplicated(reaction))) %>%
inner_join(pathways.tibble, by = c('reaction', 'reaction_description')) %>%
arrange(pathway) %>%
mutate(organism = 'unidentified taxonomy', probability = 'Present')
}
temp <- yy[[1]] %>%
inner_join(ko_term.tibble, by = 'ko_term') %>%
dplyr::filter(!(duplicated(reaction))) #at this point we have ko_term, reaction, and reaction_description columns
res <- temp %>%
group_split() %>%
purrr::map(full_join, pathways.tibble, temp, by = c('reaction', 'reaction_description')) %>%
purrr::map(arrange, pathway) %>%
purrr::map(group_by, pathway) %>%
purrr::map(dplyr::filter, !(all(is.na(organism))), !(is.na(pathway))) %>%
purrr::keep(~ !all(is.na(.x$reaction))) #filters out empty lists
scan_missing <- res %>%
purrr::map(ungroup) %>%
purrr::map(dplyr::filter, is.na(ko_term), reaction %in% colnames(bacteria.rxn.matrix)) %>% #bacteria/archaea matrices have the same column names
purrr::map(select, -ko_term)
kk = scan_missing[[1]]
res_list = res[[1]]
kk
res_list
View(res_list)
View(scan_missing)
View(res_list)
View(res)
View(res[[12]])
View(yy)
View(yy[["gene_table"]])
View(res)
View(res[[4]])
laod
load('~/Documents/metapredict_project/reqd-metapredict-data-objects-v4.RData')
View(pathways.tibble)
pathways.tibble
usethis::use_data(bacteria.rxn.matrix, imgm.archaea.rxn.matrix, ko_term.tibble, pathways.tibble, internal = TRUE)
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
rm(yy)
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt)
View(tt)
tt
tt %>% tally(probability == 'present')
tt %>% tally(probability == 'Present')
tt %>% tally(length(pathway))
tt %>% tally(unique(reaction)[probability == 'Present'])
unique(tt$reaction) %>% tally(probability == 'Present')
tt %>% filter(unique(reaction))
tt %>% filter(!(duplicated(reaction)))
tt %>% filter(!(duplicated(reaction))) %>% tally(probability == 'Present')
tt %>% filter(!(duplicated(reaction))) %>% tally(length(pathway))
is.numeric(tt)
is.numeric(tt$probability)
as.numeric(tt$probability)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally((as.numeric(probability)))
warnings()
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(na.omit(as.numeric(probability)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
length(na.omit(as.numeric(probability)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
length(na.omit(as.numeric(tt$probability)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(na.omit(as.numeric(probability)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(na.omit(as.double(probability)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally((as.double(probability))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(as.double(probability))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
mutate(probability = as.numeric(probability)) %>%
dplyr::filter(na.omit(probability)) %>%
tally(probability)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
mutate(probability = as.numeric(probability))
tt
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
mutate(probability = as.double(probability))
tt %>% filter(reaction[probability == 'Present'])
tt %>% filter(tt$reaction[probability == 'Present'])
tt %>% group_by(pathway, reaction)
tt %>% group_by(pathway, reaction) %>% filter(reaction == 'Present')
tt %>% group_by(pathway, reaction) %>% filter(reaction != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(probability != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(reaction != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(probability != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(any(probability != 'Present'))
tt %>% group_by(pathway, reaction) %>% filter(reaction != 'Present')
tt %>% group_by(pathway, reaction) %>% filter(any(probability != 'Present'))
tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present'))
tt %>% group_by(pathway, reaction)
View(tt)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)))
tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present'))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = na.omit(as.numeric(probability))))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% ungroup() %>% mutate(probability = na.omit(as.numeric(probability))))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(na.omit(probability)))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)))
tt %>% group_by(pathway, reaction)
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
tally(probability)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability)
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)) %>% ungroup() %>% group_by(pathway))
View(tt %>% group_by(pathway, reaction) %>% filter(!any(probability == 'Present')) %>% mutate(probability = as.numeric(probability)) %>% filter(!is.na(probability)) %>% ungroup() %>% group_by(pathway) %>% dplyr::filter(!(duplicated(reaction))))
x = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction)))
x %>% tally(probability)
x
x %>% length(pathway)
x %>% tally(length(pathway))
length(x$pathway) == length(x$probability)
rm(x)
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway))
summary_information <- tibble(pathway_steps_present = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = t %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = t %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = t %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
summary_information <- tibble(pathway_steps_present = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present'),
pathway_steps_predicted = tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
#filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)),
total_pathway_steps = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
warnings()
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
View(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway'))
pathway_steps_present <- class(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway'))
pathway_steps_present
rm(pathway_steps_present)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join('test' = tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway')
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
warnings()
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4)
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0,
TRUE ~ pathway_steps_predicted))
tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(probability == 'Present') %>%
full_join(tt %>%
group_by(pathway, reaction) %>%
filter(!any(probability == 'Present')) %>%
mutate(probability = as.numeric(probability)) %>%
filter(!is.na(probability)) %>%
ungroup() %>%
group_by(pathway) %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
full_join(tt %>%
dplyr::filter(!(duplicated(reaction))) %>%
tally(length(pathway)), by = 'pathway') %>%
rename(pathway_steps_present = 2, pathway_steps_predicted = 3,
total_pathways_steps = 4) %>%
mutate(pathway_steps_predicted = case_when(
is.na(pathway_steps_predicted) ~ 0L,
TRUE ~ pathway_steps_predicted))
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt[[1]])
View(tt[[2]])
tt[[1]] %>% left_join(select(tt[[2]], pathway, pathway_name), by = 'pathway')
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
View(tt[[1]])
devtools::document()
devtools::document()
yy = read_metagenome_data('~/Documents/metapredict_project/official-ORF2LCA.txt', '~/Documents/metapredict_project/test-metapred-ko-tsv-output/CarAnox_mtb2_1016-ko.tsv')
tt = MetaPredict(yy)
devtools::document()
